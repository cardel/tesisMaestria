#!/usr/bin/python
# -*- coding: utf-8 -*- 
import numpy
numpy.set_printoptions(threshold=numpy.nan)
import matplotlib.pyplot as plt
import time
import math
from matplotlib.font_manager import FontProperties
minq = -10
maxq = 10
symbols = ['r-p','b-s','g-^','y-o','m->','c-<','g--','k-.','c--']
IndexZero=10

logR=numpy.array([-2.19722458,-1.5040774 ,-1.09861229,-0.81093022,-0.58778666,-0.40546511,
 -0.25131443,-0.11778304, 0.        ]
)
Tq=numpy.array([-19.35161456,-17.7573306 ,-16.16325817,-14.56962334,-12.97691197,
 -11.38621792, -9.80021621, -8.22647733, -6.69133921, -5.28828321,
  -3.31926197,  0.        ,  3.36205463,  6.64589218,  9.87875169,
  13.07426329, 16.23944915, 19.37787029, 22.49083286, 25.5781277 ,
  28.63893721]
)
Dq=numpy.array([ 1.75923769, 1.77573306, 1.79591757, 1.82120292, 1.85384457, 1.89770299,
  1.96004324, 2.05661933, 2.2304464 , 2.6441416 , 3.31926197, 3.41191324,
  3.36205463, 3.32294609, 3.29291723, 3.26856582, 3.24788983, 3.22964505,
  3.21297612, 3.19726596, 3.18210413]
)
lnMrq=numpy.array([[  9.00447741e+01,  8.81799244e+01,  8.74758862e+01,  8.64115467e+01,
    8.55260128e+01,  8.45576347e+01,  8.36615133e+01,  8.02522272e+01,
    0.00000000e+00],
 [  8.15281475e+01,  7.96634846e+01,  7.89593313e+01,  7.78949946e+01,
    7.70094389e+01,  7.60410428e+01,  7.51448589e+01,  7.17352126e+01,
    0.00000000e+00],
 [  7.30121034e+01,  7.11478222e+01,  7.04434334e+01,  6.93791025e+01,
    6.84935015e+01,  6.75250682e+01,  6.66287567e+01,  6.32183812e+01,
    0.00000000e+00],
 [  6.44972585e+01,  6.26337662e+01,  6.19288882e+01,  6.08645703e+01,
    5.99788733e+01,  5.90103626e+01,  5.81137874e+01,  5.47019258e+01,
    0.00000000e+00],
 [  5.59849258e+01,  5.41230897e+01,  5.34171745e+01,  5.23528854e+01,
    5.14669791e+01,  5.04983033e+01,  4.96011755e+01,  4.61862511e+01,
    0.00000000e+00],
 [  4.74780152e+01,  4.56197344e+01,  4.49115408e+01,  4.38473183e+01,
    4.29609342e+01,  4.19918949e+01,  4.10935833e+01,  3.76722258e+01,
    0.00000000e+00],
 [  3.89834639e+01,  3.71330503e+01,  3.64195273e+01,  3.53554562e+01,
    3.44679050e+01,  3.34980215e+01,  3.25970978e+01,  2.91617710e+01,
    0.00000000e+00],
 [  3.05200973e+01,  2.86879195e+01,  2.79603495e+01,  2.68965470e+01,
    2.60058243e+01,  2.50338037e+01,  2.41268714e+01,  2.06593004e+01,
    0.00000000e+00],
 [  2.21489770e+01,  2.03650746e+01,  1.95919140e+01,  1.85275281e+01,
    1.76265623e+01,  1.66482287e+01,  1.57264253e+01,  1.21754074e+01,
    0.00000000e+00],
 [  1.40769657e+01,  1.24754609e+01,  1.15474917e+01,  1.04703689e+01,
    9.52620964e+00,  8.52279569e+00,  7.55103500e+00,  3.75984268e+00,
    0.00000000e+00],
 [  6.69577976e+00,  5.70941724e+00,  4.79167382e+00,  3.83548747e+00,
    2.86256653e+00,  1.84556876e+00,  7.96921439e-01,  1.00493359e-02,
    0.00000000e+00],
 [  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
    0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
    0.00000000e+00],
 [ -6.38797149e+00, -5.25490480e+00, -3.94674290e+00, -2.65908910e+00,
   -1.35881798e+00, -3.22648787e-01, -9.45779180e-03, -6.11737071e-06,
    0.00000000e+00],
 [ -1.26605892e+01, -1.02904760e+01, -7.58434050e+00, -4.96393076e+00,
   -2.39127936e+00, -5.10653696e-01, -1.42139776e-02, -9.17607010e-06,
    0.00000000e+00],
 [ -1.88772556e+01, -1.51819629e+01, -1.10521982e+01, -7.08883408e+00,
   -3.28811502e+00, -6.72379104e-01, -1.88231340e-02, -1.22321340e-05,
    0.00000000e+00],
 [ -2.50593285e+01, -1.99626798e+01, -1.44002860e+01, -9.09101184e+00,
   -4.10628911e+00, -8.23575268e-01, -2.33665612e-02, -1.52868849e-05,
    0.00000000e+00],
 [ -3.12167281e+01, -2.46505659e+01, -1.76495804e+01, -1.09954355e+01,
   -4.86995604e+00, -9.67775675e-01, -2.78499923e-02, -1.83403243e-05,
    0.00000000e+00],
 [ -3.73548756e+01, -2.92554518e+01, -2.08067789e+01, -1.28139054e+01,
   -5.59135209e+00, -1.10619248e+00, -3.22759866e-02, -2.13924531e-05,
    0.00000000e+00],
 [ -4.34770026e+01, -3.37815113e+01, -2.38691339e+01, -1.45514635e+01,
   -6.27736883e+00, -1.23946909e+00, -3.66467603e-02, -2.44432720e-05,
    0.00000000e+00],
 [ -4.95851248e+01, -3.82285751e+01, -2.68282436e+01, -1.62097301e+01,
   -6.93216119e+00, -1.36806360e+00, -4.09643748e-02, -2.74927818e-05,
    0.00000000e+00],
 [ -5.56805216e+01, -4.25938314e+01, -2.96762187e+01, -1.77895811e+01,
   -7.55835405e+00, -1.49234935e+00, -4.52307629e-02, -3.05409833e-05,
    0.00000000e+00]]
)
fileOutput = 'smallWorld5000p10'
timestr = 'smallWorld5000p10'
fig1 = plt.figure()
i = 0
for q in range(minq,maxq+1):
	if q%2==0 and q>-6:
		plt.plot(logR,lnMrq[i],symbols[int(math.fmod(i,numpy.size(symbols)))], label='q='+str(q))
	i+=1
plt.ylabel('ln(<Z(r)>)^q')
plt.title(u'Regresión lineal para red de mundo pequeño 5000 nodos y p = 10%')
plt.xlabel('ln(r/d)')
plt.legend(loc='upper left', prop={'size':6}, bbox_to_anchor=(1,1))
plt.grid(True)
plt.savefig(timestr+'_'+'TqLnrBC'+fileOutput+'.png')
fig2 = plt.figure()
plt.xlabel('q')
plt.ylabel('T(q)')
plt.title('Exponentes de masa')
plt.plot(range(minq,maxq+1), Tq,'b<-')
plt.xticks(range(minq,maxq+1))
plt.legend(loc='upper left', prop={'size':6}, bbox_to_anchor=(1,1))
plt.grid(True)
plt.savefig(timestr+'_'+'Tq'+fileOutput+'.png')
fig3 = plt.figure()
plt.xlabel('q')
plt.ylabel('D(q)')
plt.title(u'Dimensión fractal generalizada')
plt.plot(range(0,maxq), Dq[IndexZero:-1],'b<-')
plt.xticks(range(0,maxq))
plt.legend(loc='upper left', prop={'size':6}, bbox_to_anchor=(1,1))
plt.grid(True)
plt.savefig(timestr+'_'+'Dq'+fileOutput+'.png')
